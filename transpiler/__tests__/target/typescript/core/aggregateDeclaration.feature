# https://docs.google.com/spreadsheets/d/1Mqu4sj6XfiioI7t-h0sSs4bGDrsOUUaOBAGOchj2P74/edit#gid=0
Feature: Aggregate to Typescript target language

  Background:
    Given language is "TypeScript"

    Scenario Template: Aggregates are valid
    Given I have aggregates <aggregates>
    When I generate the code
    Then I should see the outputAggregates <outputAggregates>

   # Examples: # @bitloops-auto-generated
       # | aggregates | outputAggregates | @bitloops-auto-generated |
       # | {         "TodoEntity": {           "constantVars": [],           "create": {             "parameterDependency": {               "type": "TodoProps",               "value": "props"             },             "returnType": {               "ok": "TodoEntity",               "errors": []             },             "statements": []           },           "methods": {             "complete": {               "publicMethod": {                 "parameterDependencies": [],                 "returnType": {                   "ok": "bool",                   "errors": []                 },                 "statements": [                   {                     "return": {                       "expression": {                         "evaluation": {                           "regularEvaluation": {                             "type": "bool",                             "value": "true"                           }                         }                       }                     }                   }                 ]               }             }           }         } } | export class TodoEntity extends Domain.Aggregate<TodoProps> {   private constructor(props: TodoProps) {     super(props, props.id);   }    public static create(props: TodoProps): Either<TodoEntity, never> {     const todo = new TodoEntity(props);      return ok(todo);   }    get completed(): boolean {     return this.props.completed;   }    get id() {     return this._id;   }    get title(): TitleVO {     return this.props.title;   }    public complete(): Either<void, never> {     this.props.completed = true;     return ok();   }    public uncomplete(): Either<void, never> {     this.props.completed = false;     return ok();   }    public updateTitle(title: TitleVO): Either<void, never> {     this.props.title = title;     return ok();   } } | @bitloops-auto-generated |
  
    Examples: # @bitloops-auto-generated
        | aggregates | outputAggregates | @bitloops-auto-generated |
        | 123,10,32,32,32,32,32,32,32,32,34,84,111,100,111,69,110,116,105,116,121,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,99,111,110,115,116,97,110,116,86,97,114,115,34,58,32,91,93,44,10,32,32,32,32,32,32,32,32,32,32,34,99,114,101,97,116,101,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,97,114,97,109,101,116,101,114,68,101,112,101,110,100,101,110,99,121,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,84,111,100,111,80,114,111,112,115,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,112,114,111,112,115,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,114,101,116,117,114,110,84,121,112,101,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,111,107,34,58,32,34,84,111,100,111,69,110,116,105,116,121,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,114,114,111,114,115,34,58,32,91,93,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,115,116,97,116,101,109,101,110,116,115,34,58,32,91,93,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,109,101,116,104,111,100,115,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,99,111,109,112,108,101,116,101,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,112,117,98,108,105,99,77,101,116,104,111,100,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,112,97,114,97,109,101,116,101,114,68,101,112,101,110,100,101,110,99,105,101,115,34,58,32,91,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,114,101,116,117,114,110,84,121,112,101,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,111,107,34,58,32,34,98,111,111,108,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,114,114,111,114,115,34,58,32,91,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,115,116,97,116,101,109,101,110,116,115,34,58,32,91,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,114,101,116,117,114,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,118,97,108,117,97,116,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,114,101,103,117,108,97,114,69,118,97,108,117,97,116,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,98,111,111,108,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,116,114,117,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,125 | 101,120,112,111,114,116,32,99,108,97,115,115,32,84,111,100,111,69,110,116,105,116,121,32,101,120,116,101,110,100,115,32,68,111,109,97,105,110,46,65,103,103,114,101,103,97,116,101,60,84,111,100,111,80,114,111,112,115,62,32,123,10,32,32,112,114,105,118,97,116,101,32,99,111,110,115,116,114,117,99,116,111,114,40,112,114,111,112,115,58,32,84,111,100,111,80,114,111,112,115,41,32,123,10,32,32,32,32,115,117,112,101,114,40,112,114,111,112,115,44,32,112,114,111,112,115,46,105,100,41,59,10,32,32,125,10,10,32,32,112,117,98,108,105,99,32,115,116,97,116,105,99,32,99,114,101,97,116,101,40,112,114,111,112,115,58,32,84,111,100,111,80,114,111,112,115,41,58,32,69,105,116,104,101,114,60,84,111,100,111,69,110,116,105,116,121,44,32,110,101,118,101,114,62,32,123,10,32,32,32,32,99,111,110,115,116,32,116,111,100,111,32,61,32,110,101,119,32,84,111,100,111,69,110,116,105,116,121,40,112,114,111,112,115,41,59,10,10,32,32,32,32,114,101,116,117,114,110,32,111,107,40,116,111,100,111,41,59,10,32,32,125,10,10,32,32,103,101,116,32,99,111,109,112,108,101,116,101,100,40,41,58,32,98,111,111,108,101,97,110,32,123,10,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,112,114,111,112,115,46,99,111,109,112,108,101,116,101,100,59,10,32,32,125,10,10,32,32,103,101,116,32,105,100,40,41,32,123,10,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,105,100,59,10,32,32,125,10,10,32,32,103,101,116,32,116,105,116,108,101,40,41,58,32,84,105,116,108,101,86,79,32,123,10,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,112,114,111,112,115,46,116,105,116,108,101,59,10,32,32,125,10,10,32,32,112,117,98,108,105,99,32,99,111,109,112,108,101,116,101,40,41,58,32,69,105,116,104,101,114,60,118,111,105,100,44,32,110,101,118,101,114,62,32,123,10,32,32,32,32,116,104,105,115,46,112,114,111,112,115,46,99,111,109,112,108,101,116,101,100,32,61,32,116,114,117,101,59,10,32,32,32,32,114,101,116,117,114,110,32,111,107,40,41,59,10,32,32,125,10,10,32,32,112,117,98,108,105,99,32,117,110,99,111,109,112,108,101,116,101,40,41,58,32,69,105,116,104,101,114,60,118,111,105,100,44,32,110,101,118,101,114,62,32,123,10,32,32,32,32,116,104,105,115,46,112,114,111,112,115,46,99,111,109,112,108,101,116,101,100,32,61,32,102,97,108,115,101,59,10,32,32,32,32,114,101,116,117,114,110,32,111,107,40,41,59,10,32,32,125,10,10,32,32,112,117,98,108,105,99,32,117,112,100,97,116,101,84,105,116,108,101,40,116,105,116,108,101,58,32,84,105,116,108,101,86,79,41,58,32,69,105,116,104,101,114,60,118,111,105,100,44,32,110,101,118,101,114,62,32,123,10,32,32,32,32,116,104,105,115,46,112,114,111,112,115,46,116,105,116,108,101,32,61,32,116,105,116,108,101,59,10,32,32,32,32,114,101,116,117,114,110,32,111,107,40,41,59,10,32,32,125,10,125 | @bitloops-auto-generated |
  